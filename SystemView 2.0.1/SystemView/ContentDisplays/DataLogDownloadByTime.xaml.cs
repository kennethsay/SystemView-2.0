using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.ComponentModel;

using Prism.Commands;

using AppLogic;

namespace SystemView.ContentDisplays
{
    // To call DatalogDownloadByTime = new DatalogDownloadByTime();
    //
    // CLASS: DatalogDownloadByTime
    //
    // Description: This class implements UI and back-end logic for the Datalog Download by Time download type selection of the PTE. This class initializes a WPF 
    //              component that builds the front end display of the download selection. The class is instanciated from a DisplayView instance that places
    //              this WPF display inside the Session Docking mechanism. This class is instanciated by the Download presentation when the user selects the option to download
    //              a datalog from the OBC based on a time selection. A series of radio buttons are used to allow the user to specify a time interval. A command parameter 
    //              specifying the time interval is attached to a radio button and is returned through the event handler when the radio button selection is changed. 
    //              The command parameter is parsed into a value used by the Download class to request a time based download. 
    //
    // Private Data:
    //      DATA_BYTIME_SELECTED _selectedTimeInterval              - Variable to contain the time interval selected by the user
    //
    // Public Get/Set Accessors:
    //      DATA_BYTIME_SELECTED SelectedTimeInterval               - Accessor for _selectedTimeInterval variable
    //
    // Public Methods:
    //      string ToString()                                       - Override of ToString method for DatalogDownloadByTime Class
    //
    // Private Methods:
    //      timeChangeCommand(object sender, EventArgs e)           - Determines the time interval associated with the user UI radiobutton selection. 
    //                                                                Event handler runs when radiobutton selection is changed by user. 
    //
    // Constructors:
    //      DatalogDownloadTimeRange()
    //
    // Other DataTypes:
    //
    public partial class DataLogDownloadByTime : UserControl
    {
        #region PrivateMembers
        private Datalog.DATA_BYTIME_SELECTED _selectedTimeInterval;
        #endregion

        #region Accessors
        public Datalog.DATA_BYTIME_SELECTED SelectedTimeInterval
        {
            get
            {
                return _selectedTimeInterval;
            }
            set
            {
                _selectedTimeInterval = value;
            }
        }
        #endregion

        #region Constructors

        /// <summary>
        /// Default constructor for the DatalogDownloadByTime class. Creates display UI.
        /// </summary>
        public DataLogDownloadByTime()
        {
            try
            {
                // Generate the UI. This calls the logic generated by the WPF compiler to build the display.
                InitializeComponent();

                // Set the selected time interval to the default value of 48 hours
                this._selectedTimeInterval = Datalog.DATA_BYTIME_SELECTED.HR_48;
            }
            catch (Exception ex)
            {
                StringBuilder sb = new StringBuilder();
                sb.Append(String.Format("DatalogDownloadByTime::Constructor-threw exception {0}", ex.ToString()));

                Console.WriteLine(sb.ToString());
            }
        }
        #endregion

        #region PublicMethods
        /// <summary>
        /// Override of ToString method for DatalogDownloadByTime Class
        /// </summary>
        public override string ToString()
        {
            try
            {
                StringBuilder sb = new StringBuilder();
                sb.Append(String.Format("DatalogDownloadByTime Info - Selected Time Interval: {0}", _selectedTimeInterval.ToString()));

                return sb.ToString();
            }
            catch (Exception ex)
            {
                StringBuilder sb = new StringBuilder();
                sb.Append(String.Format("DatalogDownloadByTime::ToString-threw exception {0}", ex.ToString()));

                Console.WriteLine(sb.ToString());
                return null;
            }
        }
        #endregion

        #region PrivateMethods

        /// <summary>
        /// Determines the time interval associated with the user UI radiobutton selection. 
        /// Event handler runs when radiobutton selection is changed by user. 
        /// </summary>
        /// <param name="sender">Radio button sending the event</param>
        /// <param name="e"></param>
        private void timeChangeCommand(object sender, EventArgs e)
        {
            try
            {
                // First get the command parameter from the newly selected radio button
                var RadioBtnParams = (sender as RadioButton).CommandParameter;

                // Now parse the radio button into a datetime selection 
                switch (RadioBtnParams)
                {
                    // 48 hour selection
                    case "48HR":
                        this._selectedTimeInterval = Datalog.DATA_BYTIME_SELECTED.HR_48;
                        break;
                    // 24 hour selection
                    case "24HR":
                        this._selectedTimeInterval = Datalog.DATA_BYTIME_SELECTED.HR_24;
                        break;
                    // 8 hour selection
                    case "8HR":
                        this._selectedTimeInterval = Datalog.DATA_BYTIME_SELECTED.HR_08;
                        break;
                    // 4 hour selction
                    case "4HR":
                        this._selectedTimeInterval = Datalog.DATA_BYTIME_SELECTED.HR_04;
                        break;
                    // 1 hour selection
                    case "1HR":
                        this._selectedTimeInterval = Datalog.DATA_BYTIME_SELECTED.HR_01;
                        break;
                    // 30 minute selection
                    case "30MIN":
                        this._selectedTimeInterval = Datalog.DATA_BYTIME_SELECTED.MIN_30;
                        break;
                    // 15 minute selection
                    case "15MIN":
                        this._selectedTimeInterval = Datalog.DATA_BYTIME_SELECTED.MIN_15;
                        break;
                    default:
                        break;
                }
            }
            catch (Exception ex)
            {
                StringBuilder sb = new StringBuilder();
                sb.Append(String.Format("DatalogDownloadByTime::timeChangeCommand-threw exception {0}", ex.ToString()));

                Console.WriteLine(sb.ToString());
            }
        }
        #endregion
    }
}

